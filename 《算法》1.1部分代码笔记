//找出数组中的最大值
double max = a[0];
for(int i = 1; i<a.length; i++)
    if(a[i]>max) max = a[i];

//计算元素平均值
int N= a.length;
double sum = 0.0;
for(int i = 0; i<a.length; i++)
    sum += a[i];
double average = sum/N;

//复制数组
int N = a.length;
double[] b = new double[];
for(int i = 0; i<N; i++)
    b[i] = a[i];

//颠倒数组元素的顺序
int N = a.length;
for(int i = 0; i<N/2; i++)
{
    double temp = a[i];
    a[i] = a[N-1-i];
    a[N-1-i] = temp;
}

//矩阵相乘
//a[][]* b[][]= c[][]

int N = a.length;
double[][] c = new double[][];
for(i = 0;i<N; i++){
    for(j = 0; j< N; j++){
        for(int k = 0; k<N; k++){
        c[i][j] += a[i][k]*b[k][j];
        }
    }
}

//典型静态方法的实现
//计算一个整数的绝对值
public static int abs(int x)
{
    if(x<0) return -x;
    else    return x;

}


//计算一个浮点数的绝对值
public static float abs(double x)
{
    if(x<0.0) return -x;
    else      return x;

}
//判断一个数是否是素数
public static boolean isPrime(int N)
{
    if(N<2) return false;
    for(int i = 2; i*i <= N; i++)
        if(N%i== 0) return false;
    return true;
}

//计算平方根（牛顿迭代法）
public static double sqrt(double C)
{
    if(c<0) return double.NaN;
    double err = 1e-15;
    double t = c;
    while (Math.abs(t-c/t)>err*t)
        t = (c/t+t)/2.0;
    return t;

}

//计算直角三角形的斜边
public static double hypotenuse(double a , double b)
{
    return Math.sqrt(a*a +b*b);
}
//计算调和级数
//https://zh.m.wikipedia.org/zh-cn/%E8%B0%83%E5%92%8C%E7%BA%A7%E6%95%B0
public static double H(int N)
{
    double sum = 0.0;
    for(int i = 1; i<=N;++)
        sum += 1.0/i;
    return sum;
}

// 二分查找的递归实现
public static int rank(int key, int[] a)
{
    return rank(key, a, 0, a.length-1);
}

public static int rank(int key, int[] a, int lo, int hi)
{
    if(lo>hi) return -1;
    int mid = lo + (hi-lo)/2;
    if      (key < a[mid])   return rank(key, a, lo, mid-1);
    else if (key > a[mid])   return rank(key, a, mid+1, hi);
    else                     return mid;
 
}
//java 的数学函数库的API（节选）
public class Math
    static double abs(double a)
    static double max(double a, double b)
    static double min(double a, double b)

    static double sin(double theta)
    static double cos(double theta)
    static double tan(double theta)
    //toDegrees() and toRadians() can transfer the unit to degree and radian
    
    static double exp(double a)
    static double log(double a)// actually it is ln(a)
    static double pow(double a, double b) // a^b
    static double random()  // random value between 0 and 1
    static double sqrt(double a)
    static double E //自然数e
    static double PI 


//一些标准库
public class Arrays
public class StdRandom
public class StdStats
public class StdDraw
//
//
//
//
//
//
//
//
//
//
